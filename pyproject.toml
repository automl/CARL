# For TOML reference
# https://learnxinyminutes.com/docs/toml/

[tool.pytest.ini_options]
testpaths = ["test"]
minversion = "3.9"
addopts = "--cov=carl"

[tool.coverage.run]
branch = true
context = "carl"

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    '\.\.\.',
    "raise NotImplementedError",
    "if TYPE_CHECKING"
]

[tool.black]
target-version = ['py39']

[tool.isort]
py_version = "39"
profile = "black" # Play nicely with black
src_paths = ["carl", "test"]
known_types = ["typing", "abc"] # We put these in their own section "types"
sections = ["FUTURE", "TYPES", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"] # section ordering
known_first_party = ["CARL"]
multi_line_output = 3 # https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html

[tool.pydocstyle]
convention = "numpy"
add-ignore = [ # http://www.pydocstyle.org/en/stable/error_codes.html
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method

    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary and description
    "D210", # No whitespaces allowed surrounding docstring text
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line

    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D415"  # First line should end with a period, question mark, or exclamation point
]

[tool.mypy]
python_version = "3.9"

show_error_codes = true

warn_unused_configs = true  # warn about unused [tool.mypy] lines

follow_imports = "normal" # Type check top level api code we use from imports
ignore_missing_imports = false # prefer explicit ignores

disallow_untyped_defs = true # All functions must have types
disallow_untyped_decorators = true # ... even decorators
disallow_incomplete_defs = true # ...all types

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "Box2D.*",
    "configargparse.*",
    "brax.*",
    "jax.*",
    "IPython.*",
    "py4j.*",
    "cv2.*",
    "seaborn.*",
    "gym.*",
    "google.protobuf.*",
    "numpyencoder.*",
    "pyglet.*",
    "matplotlib.*",
    "pandas.*",
    "PIL.*",
    "xvfbwrapper.*",
    "scipy.*",
]
ignore_missing_imports = true
